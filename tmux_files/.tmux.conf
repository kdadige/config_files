# Set C-a as prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
unbind-key -a

# -------------------------------------------------------------------
# Macros
# -------------------------------------------------------------------
# Re-source tmux config with prefix r
## Make sure to set TMUX_CONFIG before starting.
bind r source-file $TMUX_CONFIG

bind -n Pageup copy-mode -u


# Window switching
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
bind-key -n C-Left select-window -t -1
bind-key -n C-Right select-window -t +1

# Pane navigation, Alt+(h|j|k|l)
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# Pane resizing, Alt+(arrow)
bind -n M-Left resize-pane -L
bind -n M-Right resize-pane -R
bind -n M-Up resize-pane -U
bind -n M-Down resize-pane -D

# Ctrl-Space to zoom current pane
bind-key -n C-Space resize-pane -Z
#Decomposing the config line yields:
#
#bind-key: define a key binding, aka a shortcut
#-n: without the prefix, aka in the root table
#C-Space: when pressing Ctrl-Space
#resize-pane -Z: do zoom the current pane

# Highlight zoomed tmux windows in the status line
setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=yellow],}#F#I [#W] '

# Clear old window name when renaming a window
unbind ,
bind-key , command-prompt -p (rename-window) "rename-window '%%'"

#New window shortcuts
#bind-key C-i new-window
bind-key -n C-i new-window
unbind -n Tab
#bind-key -n C-k kill-window
bind-key -n C-n next-window
bind-key -n C-p previous-window

# Split creation, | for vertical and - for horizontal
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Split creation for common build host
bind C-h split-window -v ssh marb007
bind C-v split-window -h ssh marb007

# Here is a jewel of a bind which does the task of flipping the
# orientation of the current pane with the pane before it (in the
# ordering) -- I had a SO question on this and nobody answered.
bind -n M-f move-pane -t '.-'
bind M-f move-pane -t '.-'
bind -n M-r move-pane -h -t '.-'
bind M-r move-pane -h -t '.-'

# Enable mouse control (clickable windows, panes, resizable panes)(tmux 2.1 and above)
#mouse-select-pane
#mouse-select-window
set -g mouse on
set-option -s set-clipboard off
# For vi copy mode bindings
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
# For emacs copy mode bindings
#bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

#
set-window-option -g aggressive-resize

# Copy navigation
setw -g mode-keys vi

# Copy mode - search a string
set-window-option -g mode-keys vi

# Don't mess with escape
set -s escape-time 0

# Synchronize pane typing
bind ` setw synchronize-panes

# Pane titles
#bind T send-keys Escape 0 i "printf '\\033]2;%s\\033' '" Escape A "'" Enter
#unbind t
#bind-key t command-prompt -p "(rename-pane)" -I "#T" "select-pane -T '%%'"

# -------------------------------------------------------------------
# Windows clipboard integration
# -------------------------------------------------------------------
# Use xclip to allow copying to Windows clipboard
# http://unix.stackexchange.com/questions/131011/use-system-clipboard-in-vi-copy-mode-in-tmux
# and updates mentioned here https://github.com/tmux/tmux/issues/754
## y yanks to system clipboard and tmux buffer, then ends selection while staying in copy mode
bind -T copy-mode-vi y send-keys -X copy-pipe 'cat > /dev/clipboard' \; send-keys -X copy-selection
## prefix + p to paste from windows clipboard
bind p run 'cat /dev/clipboard | tmux load-buffer - && tmux paste-buffer'
## Enter yanks to system clipboard and tmux buffer, then exits copy mode
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe 'cat > /dev/clipboard' \; send-keys -X copy-selection-and-cancel

# Other macros
## Source profile on remote machine
## Should work in US and BE
bind S send-keys "__start=\$PWD; cd $(df | grep hs1_p2 | awk '{print \$NF}')/u/chhunt/dotfiles && . ./init.sh; cd \$__start" Enter
# basic sane environment when dotfiles are not available
bind A send-keys 'set -o vi && export PS1="$(printf "\033[32m[${HOSTNAME%%.*} \$PWD]$\033[0m ")" && alias lltr="ls -ltr | tail" && stty erase ' ^v BSpace Enter

# Prevent window rename by shell after window is manually named
# http://stackoverflow.com/questions/6041178/keep-the-windows-name-fixed-in-tmux
set-option -g allow-rename off

# longer history
set-option -g history-limit 5000

# By default tmux sets $TERM to 'screen'. This is not recognized by curses on AIX,
# so vi fails. We set this explicitly for compatibility.
set-option -g default-terminal "screen-256color"

# Update environment variables in new windows
set-option -g update-environment "SSH_CONNECTION SSH_TTY DISPLAY SSH_AUTH_SOCK"

# Use bash by default
set-option -g default-shell /bin/bash

# Command aliases
## renumber windows
set -s command-alias[2] renumber='movew -r'

######################
### DESIGN CHANGES ###
######################

# Status bar
set -g status-bg colour000
set -g status-interval 1
set -g status-left-length 30 
set -g status-left '#[fg=yellow,bg=black] #S '
#set -g status-left '#[fg=yellow]TMUX Session: [#S] '
set -g status-right '#[fg=yellow,bg=black] %m/%d/%y #[fg=yellow] %H:%M:%S '
#set -g status-right '#[fg=yellow] %m/%d/%y #[fg=yellow] %H:%M:%S '
set -g status-justify left
set -g status-position top
 
setw -g clock-mode-colour colour135

setw -g window-status-format ' #I#[fg=yellow,bg=black]:#[fg=yellow,bg=black]#W#[fg=yellow]#F '
#setw -g window-status-format ' #I#[fg=yellow]:#[fg=yellow]#W#[fg=yellow]#F '

# Enable names for panes
set -g pane-border-status top
set -g pane-border-format "Pane: #P"

set -g window-style 'bg=default'
set -g window-active-style 'bg=terminal'

# Highlight current window name
setw -g window-status-current-style fg=black,bold,bg=yellow

## Join windows: <prefix> s, <prefix> j
#bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
#bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
